
@{
    ViewBag.Title = "标签测试";
}

<style>
    .el-tag + .el-tag {
        margin-left:10px;
    }
    .button-new-tag {
        margin-left:10px;
        height:32px;
        line-height:30px;
        padding-top:0;
        padding-bottom:0;
    }
    .input-new-tag {
        width: 90px;
        margin-left: 10px;
        vertical-align: bottom;
      }
</style>

<div id="app" style="padding:20px;">
    <el-tag closable :hit="ishit" type="success">默认标签</el-tag>
    <el-progress :percentage="processvalue" color="#8e71c7" status="success"></el-progress>
    <el-tag closable @@close="handleClose" v-for="tag in tags" :key="tag.name" :type="tag.type">{{tag.name}}</el-tag>
    <div>
        <el-input class="input-new-tag" v-if="inputVisible" v-model="inputValue" ref="saveTagInput" size="small" @@keyup.enter.native="handleInputConfirm" @@blur="handleInputConfirm"></el-input>
        <el-button v-else class="button-new-tag" size="small" @@click="showInput">+ New Tag</el-button>
    </div>
</div>

@section scripts{
<script>
    const app = new Vue({
        el: '#app',
        data: {
            tags: [
                { name: "标签一", type: 'primary' },
                { name: "标签二", type: 'success' },
                { name: "标签三", type: 'info' },
                { name: "标签四", type: 'warning' },
                { name: "标签五", type: 'danger' },
            ],
            inputValue: '',
            inputVisible: false,
            ishit: true,
            processvalue:80,
        },
        methods: {
            handleClose(tag) {
                this.tags.splice(this.tags.indexOf(tag), 1);
            },
            showInput() {
                this.inputVisible = true;
                this.$nextTick(_=> {
                    this.$ref.saveTagInput.$refs.input.focus();
                });
            },
            handleInputConfirm() {
                let inputValue = this.inputValue;
                if (inputValue) {
                    this.tags.push({ name: inputValue, type: 'primary' });
                }
                this.inputVisible = false;
                this.inputValue = '';
            }
        }
    });
</script>
}